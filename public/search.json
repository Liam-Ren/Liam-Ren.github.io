[{"title":"Hexo写作","url":"/2024/10/29/Hexo%E5%86%99%E4%BD%9C/","content":"<h2 id=\"写作流程\"><a href=\"#写作流程\" class=\"headerlink\" title=\"写作流程\"></a>写作流程</h2><p>在_posts文件夹下新增<code>.md</code>文件或通过指令创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo n 你的文章名</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029160626400.png\" alt=\"image-20241029160626400\"></p>\n<p>使用Typora创建<code>.md</code>文件后进行写作</p>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029161709945.png\" alt=\"image-20241029161709945\"></p>\n<h2 id=\"文件配置\"><a href=\"#文件配置\" class=\"headerlink\" title=\"文件配置\"></a>文件配置</h2><h3 id=\"Front-matter\"><a href=\"#Front-matter\" class=\"headerlink\" title=\"Front-matter\"></a>Front-matter</h3><p>Front-matter 是 markdown 文件最上方以 — 分隔的区域，用于指定文件配置。</p>\n<ul>\n<li>Page Front-matter 用于<strong>页面</strong>配置</li>\n<li>Post Front-matter 用于<strong>文章页</strong>配置</li>\n</ul>\n<h4 id=\"Page-Front-matter\"><a href=\"#Page-Front-matter\" class=\"headerlink\" title=\"Page Front-matter\"></a>Page Front-matter</h4><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title:页面标题</span><br><span class=\"line\">date:页面创建日期</span><br><span class=\"line\">updated:页面更新日期</span><br><span class=\"line\">type:标签、分类和友情链接三个页面需要配置</span><br><span class=\"line\">comments:显示页面评论模块(默认true)</span><br><span class=\"line\">description:页面描述</span><br><span class=\"line\">keywords:页面关键词</span><br><span class=\"line\"><span class=\"section\">top<span class=\"emphasis\">_img:页面顶部图片</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"section\">---</span></span></span><br><span class=\"line\"><span class=\"emphasis\"><span class=\"section\"></span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Post-Front-matter\"><a href=\"#Post-Front-matter\" class=\"headerlink\" title=\"Post Front-matter\"></a>Post Front-matter</h4><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title:文章标题</span><br><span class=\"line\">date:文章创建日期</span><br><span class=\"line\">updated:文章更新日期</span><br><span class=\"line\">tags:文章标签</span><br><span class=\"line\">categories:文章分类</span><br><span class=\"line\">keywords:文章关键字</span><br><span class=\"line\">description:文章描述</span><br><span class=\"line\">top<span class=\"emphasis\">_img:文章顶部图片</span></span><br><span class=\"line\"><span class=\"emphasis\">comments:显示文章评论模块(默认 true)</span></span><br><span class=\"line\"><span class=\"emphasis\">cover:文章缩略图(如果没有设置 top_</span>img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>自定义文章 Post Front-matter 配置项</p>\n<p>在 <code>scaffolds</code> 文件夹下找到 <code>post.md</code> 文件进行修改</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\"># 标题</span></span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">author: Liam</span><br><span class=\"line\"><span class=\"section\"># 简述</span></span><br><span class=\"line\">img: </span><br><span class=\"line\"><span class=\"section\"># 文章顶部图片</span></span><br><span class=\"line\">top<span class=\"emphasis\">_img:</span></span><br><span class=\"line\"><span class=\"emphasis\"># 是否置顶</span></span><br><span class=\"line\"><span class=\"emphasis\">top: </span></span><br><span class=\"line\"><span class=\"emphasis\"># 文章缩略图(如果没有设置 top_</span>img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</span><br><span class=\"line\">cover:</span><br><span class=\"line\"><span class=\"section\"># 轮播图</span></span><br><span class=\"line\">coverImg: </span><br><span class=\"line\"><span class=\"section\"># 标签</span></span><br><span class=\"line\">tags: </span><br><span class=\"line\"><span class=\"section\"># 分类</span></span><br><span class=\"line\">categories: </span><br><span class=\"line\"><span class=\"section\"># 是否加密文章，SHA256加密</span></span><br><span class=\"line\"><span class=\"section\">password: </span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"标签页、分类页、友链\"><a href=\"#标签页、分类页、友链\" class=\"headerlink\" title=\"标签页、分类页、友链\"></a>标签页、分类页、友链</h4><blockquote>\n<p>此处使用标签页作为示例，其他页面设置与其类似<br>标签页文件名不一定是 tags, 例子中的 tags 只是一个示例<br>记得添加 type: “tags”</p>\n</blockquote>\n<p><strong>创建步骤</strong></p>\n<ol>\n<li>前往你的 Hexo 的根目录</li>\n<li>输入 hexo new page tags</li>\n<li>你会找到 source&#x2F;tags&#x2F;index.md 这个文件</li>\n<li>修改这个文件</li>\n</ol>\n<p><strong>参数说明</strong></p>\n<ul>\n<li>type\t【必须】页面类型，必须为 tags</li>\n<li>orderby\t【可选】排序方式 ：</li>\n<li>random - 随机排序 &#x2F; name - 标签名字排序 &#x2F; length - 标签数量排序</li>\n<li>order\t【可选】排序次序： 1（升序），-1（降序）</li>\n</ul>\n<h4 id=\"阿里云-Picgo创建图床\"><a href=\"#阿里云-Picgo创建图床\" class=\"headerlink\" title=\"阿里云 + Picgo创建图床\"></a>阿里云 + Picgo创建图床</h4><ol>\n<li>登录阿里云网站，进入工作台页面，搜索对象存储，进入该页面，然后点击bucket列表</li>\n</ol>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029171112732.png\" alt=\"image-20241029171112732\"></p>\n<ol start=\"2\">\n<li><p>进入页面，点击创建bucket.</p>\n<ul>\n<li><p>Bucket名称和地域必填。地域选择一个距离自己近一些的地方。</p>\n</li>\n<li><p>读写权限选择为公共读，其余均默认</p>\n</li>\n</ul>\n</li>\n<li><p>在右上角头像处进入并创建一个key</p>\n</li>\n</ol>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029171526199.png\" alt=\"image-20241029171526199\"></p>\n<ol start=\"4\">\n<li>打开Picgo，点击图床设置，选择阿里云OSS，填写如下信息。</li>\n</ol>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029172026575.png\" alt=\"image-20241029172026575\"></p>\n<ol start=\"5\">\n<li>结合Typora使用</li>\n</ol>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029172425118.png\" alt=\"image-20241029172425118\"></p>\n","categories":["个人笔记"],"tags":["Hexo"]},{"title":"Hello World","url":"/2024/10/21/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"知识图谱介绍","url":"/2024/10/29/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/","content":"<h1 id=\"一、知识图谱\"><a href=\"#一、知识图谱\" class=\"headerlink\" title=\"一、知识图谱\"></a>一、知识图谱</h1><h2 id=\"1-1-基本概念\"><a href=\"#1-1-基本概念\" class=\"headerlink\" title=\"1.1 基本概念\"></a>1.1 基本概念</h2><p>知识图谱，在2012年由谷歌提出，是<strong>结构化</strong>的语义知识库，用于以<strong>符号形式</strong>描述物理世界中的<strong>概念及其相互关系</strong>。</p>\n<p>基本组成形式(基本单位)：&lt;实体,关系,实体&gt;构成的<strong>三元组</strong>。</p>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.PNG\" alt=\"知识图谱\"></p>\n<p><strong>图1</strong>：知识图谱</p>\n<h2 id=\"1-2-数据类型和存储方式\"><a href=\"#1-2-数据类型和存储方式\" class=\"headerlink\" title=\"1.2 数据类型和存储方式\"></a>1.2 数据类型和存储方式</h2><p>知识图谱的原始数据类型一般来说有三类：</p>\n<ul>\n<li>结构化数据（Structed Data），如：关系数据库、链接数据</li>\n<li>半结构化数据（Semi-Structured Data），如：txt、PDF、XML、JSON、百科</li>\n<li>非结构化数据（Unstructured Data），如：图片、音频、视频</li>\n</ul>\n<p>知识图谱的存储方式主要分为两种：</p>\n<p>  <strong>资源描述框架（<strong><strong>RDF</strong></strong>）</strong>：RDF是一种用于描述网络上资源及其关系的标准格式。RDF使用三元组来表示实体及其关系，RDF存储的优点在于其标准化和互操作性，可以方便地与其他语义数据进行集成。然而，对于非常复杂或大规模的数据集，查询性能可能会成为一个瓶颈。</p>\n<p>  <strong>图数据库（<strong><strong>Graph Databases</strong></strong>）</strong>：图数据库专门为处理图结构数据而设计，使用节点和边来表示实体及其关系，具有很高的查询性能和灵活性，常用的有 Neo4j，JanusGraph等，适用于大规模和关系复杂的数据场景，具有高效的查询性能和灵活性。</p>\n<h2 id=\"1-3-构建流程\"><a href=\"#1-3-构建流程\" class=\"headerlink\" title=\"1.3 构建流程\"></a>1.3 构建流程</h2><h3 id=\"逻辑架构\"><a href=\"#逻辑架构\" class=\"headerlink\" title=\"逻辑架构\"></a>逻辑架构</h3><ul>\n<li><strong>数据层</strong>：存储真实的数据。</li>\n<li><strong>模式层</strong>：在数据层之上，模式层定义了知识图谱的组织结构和类型体系，是知识图谱的元数据部分。</li>\n</ul>\n<p><strong>示例</strong>： 假设我们有一个关于电影的知识图谱，数据层可能包含以下信息：</p>\n<ul>\n<li>《泰坦尼克号》是一部1997年上映的电影。</li>\n<li>詹姆斯·卡梅隆是《泰坦尼克号》的导演。</li>\n<li>莱昂纳多·迪卡普里奥在《泰坦尼克号》中扮演杰克。</li>\n</ul>\n<p>这些信息以三元组的形式存储，在<strong>数据层</strong>与<strong>模式层</strong>：</p>\n<ul>\n<li>(《泰坦尼克号》——上映年份——1997)&lt;——&gt;(实体——属性——属性值)</li>\n<li>(《泰坦尼克号》——导演——詹姆斯·卡梅隆)&lt;——&gt;(实体——关系——实体)</li>\n<li>(莱昂纳多·迪卡普里奥——扮演角色——杰克)&lt;——&gt;(实体——关系——实体)</li>\n</ul>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B.PNG\" alt=\"知识图谱构建流程\"></p>\n<p><strong>图2</strong>：知识图谱构建流程</p>\n<h3 id=\"知识抽取\"><a href=\"#知识抽取\" class=\"headerlink\" title=\"知识抽取\"></a>知识抽取</h3><p>从各种类型的数据源中提取出<strong>实体</strong>、<strong>属性</strong>以及实体间的相互<strong>关系</strong>，在此基础上形成本体话的知识表达。</p>\n<ul>\n<li><strong>实体抽取：</strong>也称为命名实体识别（named entity recognition，NER），是指从文本数据集中自动识别出命名实体。</li>\n<li><strong>关系抽取：</strong>为了得到语义信息，还需要从相关语料中提取出实体之间的关联关系，通过关系将实体联系起来，才能够形成网状的知识结构。</li>\n<li><strong>属性抽取：</strong>从不同信息源中采集特定实体的属性信息。</li>\n</ul>\n<h3 id=\"知识融合\"><a href=\"#知识融合\" class=\"headerlink\" title=\"知识融合\"></a>知识融合</h3><p>在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等。</p>\n<ul>\n<li><p><strong>实体链接：</strong>对于从文本中抽取得到的实体对象，将其链接到知识库中对应的正确实体对象的操作，针对<strong>半结构化数据和非结构化数据</strong>。</p>\n<ul>\n<li>同名实体产生歧义问题——<strong>实体消歧。</strong></li>\n</ul>\n<blockquote>\n<ol>\n<li>假设存在两个版本的《泰坦尼克号》电影，一个是1997年詹姆斯·卡梅隆导演的版本，另一个是1958年的早期版本。在抽取过程中，如果文本中提到了《泰坦尼克号》，我们需要确定它指的是哪一个版本。</li>\n<li>电影中可能有一些虚构的角色，它们与真实人物同名。例如，电影中可能有一个虚构的配角也叫“詹姆斯”。而在一些影评中可能存在对导演“詹姆斯·卡梅隆”的评价，需要通过实体消歧来确定这个“詹姆斯”是否是电影中的一个虚构角色。</li>\n</ol>\n</blockquote>\n<ul>\n<li>多个指称对应同一实体对象的问题——<strong>共指消解</strong>。</li>\n</ul>\n<blockquote>\n<ol>\n<li>例如在文本中提到“男主角杰克”和“他在电影中的表现”，共指消解将帮助我们确定这两个指称(“男主角杰克”和”他”)都是指向《泰坦尼克号》中的角色“Jack Dawson”。</li>\n<li>在影评中可能同时出现“男主角”和角色名“杰克”，我们需要确定它们都指的是同一个人。</li>\n</ol>\n</blockquote>\n</li>\n<li><p><strong>知识合并：</strong>处理<strong>结构化数据</strong>，比如外部知识库和关系数据库。</p>\n<blockquote>\n<ul>\n<li>假设已有一个外部数据库提供了《泰坦尼克号》的详细信息，包括演员、工作人员、上映日期等。我们的知识库可能已经有了一些这部电影的信息。知识合并的过程将包括：<ul>\n<li>核对外部数据库中提供的数据与知识库中的信息是否一致。</li>\n<li>解决任何数据冲突，例如，如果外部数据库中列出的上映日期与知识库中的日期不符，需要进一步验证哪个是正确的。</li>\n<li>将外部数据库中的额外信息（如电影的技术规格、获奖情况等）添加到知识库中，以丰富《泰坦尼克号》的条目。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"知识加工\"><a href=\"#知识加工\" class=\"headerlink\" title=\"知识加工\"></a>知识加工</h3><p>通过知识抽取以及知识融合后，获得了一系列基本的事实表达，但这些不等于知识。要想最终获得结构化、网络化的知识体系，还需要经历知识加工的过程。</p>\n<p>知识加工主要包括三个方面的内容：<strong>本体构建、知识推理和质量评估</strong>。</p>\n<ul>\n<li><p><strong>本体构建：</strong>本体提供了一个框架，定义了可以存储在知识图谱中的实体类型、属性和关系。</p>\n<blockquote>\n<ul>\n<li><strong>实体类型</strong>：定义电影、导演、演员、角色、电影公司等实体类型。</li>\n<li><strong>属性</strong>：为每种实体类型定义属性，例如电影可能有属性如上映日期、类型、票房、导演、主演等。</li>\n<li><strong>关系</strong>：定义实体之间的关系，如“导演执导了电影”、“演员扮演了角色”等。</li>\n</ul>\n<p>这一整个知识图谱的框架就是一个本体。</p>\n</blockquote>\n</li>\n<li><p><strong>知识推理：</strong>经过本体构建后，形成了一个知识图谱的雏形。但这时候，知识图谱的缺失值可能很严重，因此需要使用知识推理，利用已有的知识来发现新知识，填补知识图谱中的缺失信息，增强知识之间的联系。</p>\n</li>\n<li><p><strong>质量评估：</strong></p>\n<ul>\n<li>质量评估的目的是量化知识的可信度，确保知识库的质量。通过评估，可以识别并舍弃那些置信度较低的知识，从而维护知识库的准确性和可靠性。</li>\n<li>质量评估可能包括多个方面，如数据源的可靠性、数据的一致性（检查是否存在矛盾或冗余问题）等。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"二、-LLM-背景下的知识图谱\"><a href=\"#二、-LLM-背景下的知识图谱\" class=\"headerlink\" title=\"二、 LLM 背景下的知识图谱\"></a>二、 LLM 背景下的知识图谱</h1><h2 id=\"2-1-知识图谱分类\"><a href=\"#2-1-知识图谱分类\" class=\"headerlink\" title=\"2.1 知识图谱分类\"></a>2.1 知识图谱分类</h2><p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/2bd53815-84dd-4913-920f-b3be2f18acfe.png\" alt=\"2bd53815-84dd-4913-920f-b3be2f18acfe\"></p>\n<p><strong>图3</strong>：不同类别知识图谱示例</p>\n<p>知识图谱按存储信息大致可以分为以下四类：</p>\n<ul>\n<li>百科全书式知识图谱</li>\n</ul>\n<p>百科知识图谱是最普遍的知识图谱，它代表了现实世界中的常识。百科全书知识图通常是通过整合来自不同和广泛来源的信息来构建的，包括人类专家、百科全书和数据库。</p>\n<ul>\n<li>常识知识图谱</li>\n</ul>\n<p>常识知识图谱表述了有关日常概念的知识，例如对象和事件及其关系。与百科全书式知识图相比，常识知识图往往对从文本中提取的隐性知识进行建模</p>\n<ul>\n<li>特定领域知识图谱</li>\n</ul>\n<p>特定领域的知识图通常被构建来表示特定领域的知识，例如医学、生物学和金融。与百科全书式的知识图谱相比，特定领域的知识图谱往往尺寸更小，但更准确、更可靠。</p>\n<ul>\n<li>多模态知识图谱</li>\n</ul>\n<p>与仅包含文本信息的传统知识图不同，多模态知识图以图像、声音和视频等多种模态表示事实。</p>\n<h2 id=\"2-2-LLM与KG统一框架\"><a href=\"#2-2-LLM与KG统一框架\" class=\"headerlink\" title=\"2.2 LLM与KG统一框架\"></a>2.2 LLM与KG统一框架</h2><p>《<a href=\"https://ieeexplore.ieee.org/abstract/document/10387715\">Unifying Large Language Models and Knowledge Graphs: A Roadmap</a>》一文中提出了 LLM 和 KG(知识图谱)统一的三个框架。</p>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/765954b6-c664-482a-9720-e76b126c9207.png\" alt=\"765954b6-c664-482a-9720-e76b126c9207\"></p>\n<ul>\n<li><strong>KG增强LLMs</strong>：<ul>\n<li><strong>目的</strong>：通过整合知识图谱中的结构化和领域特定知识来改进LLMs。这种整合主要发生在LLMs的预训练和推理阶段。</li>\n<li><strong>优点</strong>：通过提供事实和结构化知识，增强了LLMs的理解和推理能力。</li>\n</ul>\n</li>\n<li><strong>LLM增强KGs</strong>：<ul>\n<li><strong>目的</strong>：利用LLMs的能力执行有利于KGs的任务，如KG嵌入、完成、构建、图到文本生成和问题回答。</li>\n<li><strong>优点</strong>：通过利用LLMs的自然语言处理能力，旨在简化和提高KG相关任务的准确性。</li>\n</ul>\n</li>\n<li><strong>LLMs</strong> <strong>+ KGs的协同</strong>：<ul>\n<li><strong>目的</strong>：LLMs和KGs在一个互利的设置中共同工作，以增强彼此的能力。这种协同旨在优化知识表示和推理过程。</li>\n<li><strong>优点</strong>：促进双向推理，数据和知识驱动性能在复杂任务中的提升，导致在需要文本理解和事实知识的应用中更好的结果。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://liam123.oss-cn-hangzhou.aliyuncs.com/blog/image-20241029181228511.png\" alt=\"image-20241029181228511\"></p>\n","categories":["个人笔记"],"tags":["NLP"]}]